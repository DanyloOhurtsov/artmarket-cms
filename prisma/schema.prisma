// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

// Models
model Category {
  id   String @id @default(uuid())
  name String
  slug String @unique

  description String?
  shortDesc   String?
  image       String?

  metaTitle String?
  metaDesc  String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  menuItems MenuItem[]
  products  Product[]
}

model Product {
  id   String @id @default(uuid())
  name String
  slug String @unique

  description String? @default("")
  shortDesc   String? @default("")

  minOrder Int? @default(1)
  maxOrder Int?
  stock    Int? @default(0)

  isActive Boolean @default(true)
  price    Float

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  images String[]

  categoryId String
  category   Category  @relation(fields: [categoryId], references: [id])
  variants   Variant[]
}

model Variant {
  id   String @id @default(uuid())
  name String
  slug String @unique

  description String?
  shortDesc   String?

  minOrder Int? @default(1)
  maxOrder Int?
  stock    Int? @default(0)

  isActive Boolean @default(true)
  price    Float

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  productId String
  product   Product @relation(fields: [productId], references: [id])

  options VariantOption[]
}

model VariantOption {
  id    String @id @default(uuid())
  name  String // Назва опції, наприклад, "Розмір" або "Колір"
  value String // Значення опції

  variantId String
  variant   Variant @relation(fields: [variantId], references: [id])
}

model Menu {
  id    String     @id @default(uuid())
  name  String     @unique
  items MenuItem[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model MenuItem {
  id     String @id @default(uuid())
  name   String
  order  Int
  menuId String
  menu   Menu   @relation(fields: [menuId], references: [id])

  parentId String?
  parent   MenuItem?  @relation("MenuItemHierarchy", fields: [parentId], references: [id])
  children MenuItem[] @relation("MenuItemHierarchy")

  categoryId String?
  category   Category? @relation(fields: [categoryId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
